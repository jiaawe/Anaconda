.features {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  column-gap: 40px;
}

.leftFlex {
  flex: 1 1 0%;
  display: flex;
  flex-direction: column;
  row-gap: 20px;
}

.sampleImages {
  display: grid;
  grid-template-columns: repeat(5, minmax(0, 1fr));
  gap: 18px;
}

.sampleAudios {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  gap: 18px;
}

.image {
  height: 100px;
  width: 100px;
  object-fit: cover;
}

.audio {
  height: 200px;
  width: 300px;
  object-fit: cover;
}

.image:hover {
  border: solid 4px #4f46e5;
  transition: 0.3s;
  transform: scale(1.1);
}

.rightFlex {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  row-gap: 32px;
  width: 100%;
}

.btn {
  width: 91%; /* Set the button width to 100% */
  padding: 2% 0;
  border: solid 2px #4f46e5;
  background-color: inherit;
  border-radius: 4px;
  font-family: inherit;
  font-size: 24px;
  color: #4f46e5;
  cursor: pointer;
  transition: background-color 0.3s;
  transform: scale(1.1);
}

.btn:hover:enabled {
  background-color: #4f46e5;
  color: #eef2ff;
}

.btn:disabled {
  border: solid 2px #4f46e550;
  color: #4f46e550;
  cursor: not-allowed;
}

.imageWrapper {
  position: relative; /* Make it the positioning reference for its children */
}

.cancelButton {
  position: absolute; /* Position it relative to the imageWrapper */
  top: 5px; /* Some space from the top */
  left: 20px; /* Some space from the left */
  background: rgba(0, 0, 0, 0.6); /* Semi-transparent black */
  color: white; /* React icon color */
  border: none;
  border-radius: 50%; /* Make it round */
  padding: 5px 5px;
  cursor: pointer;
  transition: background-color 0.3s;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
}

.cancelButtonVideo {
  position: absolute; /* Position it relative to the imageWrapper */
  top: 5px; /* Some space from the top */
  left: -30px; /* Some space from the left */
  background: rgba(0, 0, 0, 0.6); /* Semi-transparent black */
  color: white; /* React icon color */
  border: none;
  border-radius: 50%; /* Make it round */
  padding: 5px 5px;
  cursor: pointer;
  transition: background-color 0.3s;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 40px;
  height: 40px;
}

.cancelButton:hover {
  background: rgba(0, 0, 0, 0.8); /* Slightly darker on hover */
}

.uploadedImage,
.lottieContainer {
  max-width: 100%;
  max-height: 330px; /* Adjust based on your desired maximum height for the image */
  display: block;
  margin: 0 auto; /* Center the image if it's smaller than the container width */
}

.lottieContainer {
  height: 100%;
  scale: 1.5;
}

.progressBar {
  width: 100%;
  height: 20px;
  background-color: #f3f3f3;
  border-radius: 15px;
  overflow: hidden;
  position: relative;
}

.progressBar div {
  height: 100%;
  width: 100%;
  background-color: #4f46e5;
  animation: loading 2s linear;
}

@keyframes loading {
  0% {
    width: 0%;
  }
  50% {
    width: 100%;
  }
  100% {
    width: 0%;
  }
}
.predictionResult {
  font-weight: 700;
}
.humanGenerated {
  color: #22c55e;
}

.notHumanGenerated {
  color: #ef4444;
}
